services:
  - docker:stable-dind

stages:
  - build jar
  - build and push docker image
  - deploy

build:
  image: gradle:7.1.1-jdk11
  stage: build jar
  cache:
    key: build-cache
    paths:
      - .gradle/wrapper
      - .gradle/caches

  before_script:
    - mv $PROPERTIES src/main/resources/application.properties
    - mv $TEST_PROPERTIES src/test/resources/application.properties
    - echo '########## - Define my variables'
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - echo $GRADLE_USER_HOME

  script:
    - ./gradlew bootJar -g $GRADLE_USER_HOME

  artifacts:
    paths:
      - build/libs/*.jar
  tags:
    - api

docker build:
  image: rimeilo324/aws-docker:0.0.1
  stage: build and push docker image

  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"

  before_script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_DEFAULT_REGION
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ECR_REPO

  script:
    - docker build
      --platform linux/amd64
      -t $AWS_ECR_REPO:latest
      -t $AWS_ECR_REPO:${CI_COMMIT_SHORT_SHA} .

    #- docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io
    - docker push $AWS_ECR_REPO:latest
    - docker push $AWS_ECR_REPO:${CI_COMMIT_SHORT_SHA}
  tags:
    - api
  only:
    - develop



deploy:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  #image: ubuntu:latest
  stage: deploy
  script:
    #- aws ecs register-task-definition --cli-input-json file://./t-d-1.json
    #- aws ecs update-service --region "$AWS_DEFAULT_REGION" --cluster "$CI_AWS_ECS_CLUSTER" --service "$CI_AWS_SERVICE_NAME"  --task-definition "$CI_AWS_ECS_TASK_DEFINITION" --force-new-deployment
    - aws ecs update-service --region "$AWS_DEFAULT_REGION" --cluster "$CI_AWS_ECS_CLUSTER" --service "$CI_AWS_SERVICE_NAME" --force-new-deployment

  tags:
    - api
  only:
    - develop
